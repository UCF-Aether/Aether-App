-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.get_pollutant_subindex(IN pollutant text,IN conc double precision,IN for_timeframe_hours integer DEFAULT '-1'::integer)
    RETURNS pollutant_subindex
    LANGUAGE 'sql'
    STABLE
    PARALLEL SAFE
    COST 100
    
AS $BODY$
select *
from
  pollutant_subindex
where
    conc_low <= conc
and conc_high >= conc
and pol = pollutant
and case
      when for_timeframe_hours > 0 then
        timeframe_hours = for_timeframe_hours
      when pollutant = 'O3'
             and conc <= (select max(conc_high) from pollutant_subindex where pol = 'O3' and timeframe_hours = 8)
        then
        timeframe_hours = 8
      when pollutant = 'O3' then
        timeframe_hours = 1
      else true end
order by
  timeframe_hours ASC
limit 1;
$BODY$;

CREATE OR REPLACE FUNCTION public.update_hourly_aqi()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    VOLATILE
    COST 100
AS $BODY$
declare
  pol_id smallint;
  pol_name text;
  new_aqi smallint;
begin
  if not new.chan_id in (
    select
      sensor_chan_id
    from
      sensor_chan sc
    where
      sc.name in ('O3', 'PM2_5', 'PM10', 'NO2', 'CO', 'SO2')) then
    return new;
  end if;

  select
    name
  from
    pollutant p
  where
      p.name = (select sc.name from sensor_chan sc where sc.sensor_chan_id = new.chan_id)
  into pol_name;

  select
    pollutant_id
  from
    pollutant p
  where
    p.name = pol_name
  into pol_id;

  select conc_to_aqi(pol_name, new.avg) into new_aqi;

  insert into
    hourly_aqi (device_id, loc_id, pollutant_id, hour, day, aqi, type)
  values
    (new.device_id,
     new.loc_id,
     pol_id,
     new.hour,
     new.day,
     new_aqi,
     'RAW')
  on conflict (day, hour, pollutant_id, loc_id, device_id, type) do update
    set
      aqi = new_aqi;

  return new;
end;
$BODY$;
